{"ast":null,"code":"var _jsxFileName = \"/home/faha/local-repo/journey-to-react/quizzical/src/components/Question.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Question(_ref) {\n  _s();\n\n  let {\n    answers,\n    onClickAnswer,\n    question,\n    selectedAnswer,\n    showAnswer\n  } = _ref;\n  const [answersSorted, setAnswersSorted] = useState(answers);\n  useEffect(() => {\n    setAnswersSorted(prev => {\n      return prev.map(answer => ({ ...answer,\n        order: Math.random() - 0.5\n      })).sort(_ref2 => {\n        let {\n          order\n        } = _ref2;\n        return order;\n      });\n    });\n  }, []);\n\n  function generateAnswer(_ref3) {\n    let {\n      answer,\n      isCorrect\n    } = _ref3;\n    const currentSelected = selectedAnswer === answer;\n    const className = ['answerBtn'];\n\n    if (currentSelected) {\n      className.push('selected');\n    }\n\n    if (isCorrect && showAnswer) {\n      className.push('correct');\n    } else if (!isCorrect && currentSelected && showAnswer) {\n      className.push('wrong');\n    } else if (showAnswer) {\n      className.push('show');\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onClickAnswer(answer),\n      className: `${className.join(' ')}`,\n      children: answer.replaceAll('&#039;', \"'\").replaceAll('&quot;', '\"')\n    }, answer, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quizQuestion\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: question.replaceAll('&#039;', \"'\").replaceAll('&quot;', '\"')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"answersList\",\n      children: answersSorted.map(generateAnswer)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, question, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Question, \"aam5MNJZS2fr6I2QcOmXYF+UJJE=\");\n\n_c = Question;\n\nvar _c;\n\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"sources":["/home/faha/local-repo/journey-to-react/quizzical/src/components/Question.js"],"names":["useEffect","useState","Question","answers","onClickAnswer","question","selectedAnswer","showAnswer","answersSorted","setAnswersSorted","prev","map","answer","order","Math","random","sort","generateAnswer","isCorrect","currentSelected","className","push","join","replaceAll"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AAEA,eAAe,SAASC,QAAT,OAMZ;AAAA;;AAAA,MAN8B;AAC/BC,IAAAA,OAD+B;AAE/BC,IAAAA,aAF+B;AAG/BC,IAAAA,QAH+B;AAI/BC,IAAAA,cAJ+B;AAK/BC,IAAAA;AAL+B,GAM9B;AACD,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCR,QAAQ,CAACE,OAAD,CAAlD;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,gBAAgB,CAAEC,IAAD,IAAU;AACzB,aAAOA,IAAI,CACRC,GADI,CACCC,MAAD,KAAa,EAAE,GAAGA,MAAL;AAAaC,QAAAA,KAAK,EAAEC,IAAI,CAACC,MAAL,KAAgB;AAApC,OAAb,CADA,EAEJC,IAFI,CAEC;AAAA,YAAC;AAAEH,UAAAA;AAAF,SAAD;AAAA,eAAeA,KAAf;AAAA,OAFD,CAAP;AAGD,KAJe,CAAhB;AAKD,GANQ,EAMN,EANM,CAAT;;AAQA,WAASI,cAAT,QAA+C;AAAA,QAAvB;AAAEL,MAAAA,MAAF;AAAUM,MAAAA;AAAV,KAAuB;AAC7C,UAAMC,eAAe,GAAGb,cAAc,KAAKM,MAA3C;AACA,UAAMQ,SAAS,GAAG,CAAC,WAAD,CAAlB;;AAEA,QAAID,eAAJ,EAAqB;AACnBC,MAAAA,SAAS,CAACC,IAAV,CAAe,UAAf;AACD;;AAED,QAAIH,SAAS,IAAIX,UAAjB,EAA6B;AAC3Ba,MAAAA,SAAS,CAACC,IAAV,CAAe,SAAf;AACD,KAFD,MAEO,IAAI,CAACH,SAAD,IAAcC,eAAd,IAAiCZ,UAArC,EAAiD;AACtDa,MAAAA,SAAS,CAACC,IAAV,CAAe,OAAf;AACD,KAFM,MAEA,IAAId,UAAJ,EAAgB;AACrBa,MAAAA,SAAS,CAACC,IAAV,CAAe,MAAf;AACD;;AAED,wBACE;AACE,MAAA,OAAO,EAAE,MAAMjB,aAAa,CAACQ,MAAD,CAD9B;AAGE,MAAA,SAAS,EAAG,GAAEQ,SAAS,CAACE,IAAV,CAAe,GAAf,CAAoB,EAHpC;AAAA,gBAKGV,MAAM,CAACW,UAAP,CAAkB,QAAlB,EAA4B,GAA5B,EAAiCA,UAAjC,CAA4C,QAA5C,EAAsD,GAAtD;AALH,OAEOX,MAFP;AAAA;AAAA;AAAA;AAAA,YADF;AASD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACE;AAAA,gBAAKP,QAAQ,CAACkB,UAAT,CAAoB,QAApB,EAA8B,GAA9B,EAAmCA,UAAnC,CAA8C,QAA9C,EAAwD,GAAxD;AAAL;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,gBAA8Bf,aAAa,CAACG,GAAd,CAAkBM,cAAlB;AAA9B;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA,KAAmCZ,QAAnC;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GAnDuBH,Q;;KAAAA,Q","sourcesContent":["import { useEffect, useState } from 'react';\n\nexport default function Question({\n  answers,\n  onClickAnswer,\n  question,\n  selectedAnswer,\n  showAnswer\n}) {\n  const [answersSorted, setAnswersSorted] = useState(answers);\n\n  useEffect(() => {\n    setAnswersSorted((prev) => {\n      return prev\n        .map((answer) => ({ ...answer, order: Math.random() - 0.5 }))\n        .sort(({ order }) => order);\n    });\n  }, []);\n\n  function generateAnswer({ answer, isCorrect }) {\n    const currentSelected = selectedAnswer === answer;\n    const className = ['answerBtn'];\n\n    if (currentSelected) {\n      className.push('selected');\n    }\n\n    if (isCorrect && showAnswer) {\n      className.push('correct');\n    } else if (!isCorrect && currentSelected && showAnswer) {\n      className.push('wrong');\n    } else if (showAnswer) {\n      className.push('show');\n    }\n\n    return (\n      <button\n        onClick={() => onClickAnswer(answer)}\n        key={answer}\n        className={`${className.join(' ')}`}\n      >\n        {answer.replaceAll('&#039;', \"'\").replaceAll('&quot;', '\"')}\n      </button>\n    );\n  }\n\n  return (\n    <div className=\"quizQuestion\" key={question}>\n      <h3>{question.replaceAll('&#039;', \"'\").replaceAll('&quot;', '\"')}</h3>\n      <div className=\"answersList\">{answersSorted.map(generateAnswer)}</div>\n      <hr />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}