{"ast":null,"code":"var _jsxFileName = \"/home/faha/local-repo/journey-to-react/quizzical/src/components/QuizPage.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport Question from './Question';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function QuizPage(_ref) {\n  _s();\n\n  let {\n    inputData,\n    PlayAgain\n  } = _ref;\n  const [questionArray, setQuestionArray] = useState([]);\n  const [showAnswer, setShowAnswer] = useState(false);\n  const [answersArray, setAnswersArray] = useState([]);\n  useEffect(() => {\n    fetch(`https://opentdb.com/api.php?amount=${inputData.numberOfQuestions}&category=${inputData.category}&type=multiple`).then(response => response.json()).then(data => {\n      setQuestionArray(data.results.map(question => ({ ...question,\n        selectedAnswer: null\n      })));\n    });\n  }, []);\n\n  function CheckAnswerHandler() {\n    setShowAnswer(true);\n    setAnswersArray(questionArray.filter(answer => answer.correct_answer === answer.selectedAnswer));\n  }\n\n  const questionList = questionArray.map(question => {\n    const answers = [{\n      answer: question.correct_answer,\n      isCorrect: true\n    }, ...question.incorrect_answers.map(ans => ({\n      answer: ans,\n      isCorrect: false\n    }))];\n    return /*#__PURE__*/_jsxDEV(Question, {\n      selectedAnswer: question.selectedAnswer,\n      answers: answers,\n      showAnswer: showAnswer,\n      question: question.question,\n      onClickAnswer: answer => setQuestionArray(prevValue => prevValue.map(q => {\n        if (q.question === question.question) {\n          return q.question === question.question ? { ...q,\n            selectedAnswer: answer\n          } : q;\n        } else {\n          return q;\n        }\n      }))\n    }, question.question, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"questionsSection\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: questionList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), !showAnswer ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: CheckAnswerHandler,\n      className: \"button btnCheckAnswers\",\n      children: \"Check Answers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bottomBar\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: `You score ${answersArray.length}/${questionArray.length} correct answers`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: PlayAgain,\n        className: \"button btnCheckAnswers\",\n        children: [' ', \"Play Again\", ' ']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n\n_s(QuizPage, \"SlmSibrOfT/J0oIQTpnlcUNkJGQ=\");\n\n_c = QuizPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuizPage\");","map":{"version":3,"sources":["/home/faha/local-repo/journey-to-react/quizzical/src/components/QuizPage.js"],"names":["useEffect","useState","Question","QuizPage","inputData","PlayAgain","questionArray","setQuestionArray","showAnswer","setShowAnswer","answersArray","setAnswersArray","fetch","numberOfQuestions","category","then","response","json","data","results","map","question","selectedAnswer","CheckAnswerHandler","filter","answer","correct_answer","questionList","answers","isCorrect","incorrect_answers","ans","prevValue","q","length"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\nimport Question from './Question';\n\nexport default function QuizPage({ inputData, PlayAgain }) {\n  const [questionArray, setQuestionArray] = useState([]);\n  const [showAnswer, setShowAnswer] = useState(false);\n  const [answersArray, setAnswersArray] = useState([]);\n\n  useEffect(() => {\n    fetch(\n      `https://opentdb.com/api.php?amount=${inputData.numberOfQuestions}&category=${inputData.category}&type=multiple`\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        setQuestionArray(\n          data.results.map((question) => ({\n            ...question,\n            selectedAnswer: null\n          }))\n        );\n      });\n  }, []);\n\n  function CheckAnswerHandler() {\n    setShowAnswer(true);\n    setAnswersArray(\n      questionArray.filter(\n        (answer) => answer.correct_answer === answer.selectedAnswer\n      )\n    );\n  }\n\n  const questionList = questionArray.map((question) => {\n    const answers = [\n      {\n        answer: question.correct_answer,\n        isCorrect: true\n      },\n      ...question.incorrect_answers.map((ans) => ({\n        answer: ans,\n        isCorrect: false\n      }))\n    ];\n\n    return (\n      <Question\n        selectedAnswer={question.selectedAnswer}\n        answers={answers}\n        showAnswer={showAnswer}\n        question={question.question}\n        onClickAnswer={(answer) =>\n          setQuestionArray((prevValue) =>\n            prevValue.map((q) => {\n              if (q.question === question.question) {\n                return q.question === question.question\n                  ? { ...q, selectedAnswer: answer }\n                  : q;\n              } else {\n                return q;\n              }\n            })\n          )\n        }\n        key={question.question}\n      />\n    );\n  });\n\n  return (\n    <section className=\"questionsSection\">\n      <div>{questionList}</div>\n      {!showAnswer ? (\n        <button onClick={CheckAnswerHandler} className=\"button btnCheckAnswers\">\n          Check Answers\n        </button>\n      ) : (\n        <div className=\"bottomBar\">\n          <p>{`You score ${answersArray.length}/${questionArray.length} correct answers`}</p>\n          <button onClick={PlayAgain} className=\"button btnCheckAnswers\">\n            {' '}\n            Play Again{' '}\n          </button>\n        </div>\n      )}\n    </section>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}